type SubaccountId = nat;
type MintResult =
 variant {
   err: ImmediateTxError;
   ok: nat;
 };
type EmptyResult =
  variant {
    err;
    ok;
  };
type ImmediateTxError = 
 variant {
   AssetIdTooLargea;
   FlowsNotSorted;
   FtQuantityTooLarge;
   InsufficientFunds;
   MemoTooLarge;
   MismatchInAsset;
   MissingApproval;
   NonZeroAssetSum;
   NotAController;
   OwnersNotUnique;
   SubaccountIdTooLarge;
   TooManyContributions;
   TooManyFlows;
   UnknownFtAsset;
   UnknownPrincipal;
   UnknownSubaccount;
 };
service : (principal) -> {
    mint: (principal, SubaccountId) -> (MintResult);
    refundAll: () -> (EmptyResult);
}
